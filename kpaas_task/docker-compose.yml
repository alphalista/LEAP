version: '3'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./selfsigned.crt:/etc/nginx/ssl/selfsigned.crt
      - ./selfsigned.key:/etc/nginx/ssl/selfsigned.key
      - static_volume:/usr/share/nginx/html/static
    networks:
      - app_network

  django-rest:
    image: sungmin330/kpaas_rest:latest
    command: python manage.py collectstatic && daphne -b 0.0.0.0 -p 8000 kpaas_rest.asgi:application
    ports:
      - "8000:8000"
    depends_on:
      - nginx
      - db
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - TZ=Asia/Seoul
    networks:
      - app_network

  celery-flower:
    image: sungmin330/kpaas_task:latest
    command: celery -A config flower
    ports:
      - "5555:5555"
    depends_on:
      - nginx
      - db
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - app_network

  celery-beat:
    image: sungmin330/kpaas_task:latest
    command: celery -A config beat

    depends_on:
      - nginx
      - db
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - app_network

  celery-worker:
    image: sungmin330/kpaas_task:latest
    command: celery -A config worker
    depends_on:
      - nginx
      - db
      - redis
      - celery-beat
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - app_network

  flutter:
    image: 47813/fltr:latest
    ports:
      - "8080:80"
    depends_on:
      - nginx
    networks:
      - app_network
  db:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app_network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app_network

volumes:
  db_data:
  static_volume:

networks:
  app_network:
    driver: bridge